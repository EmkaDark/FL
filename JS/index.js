"use strict";var e=document.querySelector(".ua_input"),t=document.querySelector(".CPC_input"),u=document.querySelector(".CROne_input"),n=document.querySelector(".CRTwo_input"),r=document.querySelector(".AvP_input"),o=document.querySelector(".COGS_input"),c=document.querySelector(".RET_input");function l(){return Number(e.value)*Number(t.value)/i()}function m(){return C()*Number(c.value)*(Number(n.value)/100)}function a(){return Number(e.value)*(Number(u.value)/100)}function i(){return a()*(Number(n.value)/100)}function d(){return Number(r.value)*(Number(o.value)/100)}function v(){return(Number(r.value)-d())*Number(c.value)}function S(){return Number(t.value)*Number(e.value)}function y(){return v()-l()}function C(){return Number(r.value)-d()}function f(){return v()*i()}function q(){return f()-S()}[e,t,u,n,r,c,o].forEach((function(x){x.addEventListener("input",(function(x){document.querySelector(".formula_pppu").textContent=function(){console.log(Number(t.value)/(Number(u.value)/100)/(Number(n.value)/100));var e=Number(t.value)/(Number(u.value)/100)/(Number(n.value)/100),l=(Number(r.value)-Number(o.value))*Number(c.value);return Math.floor(-e+l)}(),document.querySelector(".Cppu").textContent=l(),document.querySelector(".ThreCpc").textContent=m()*(Number(u.value)/100),document.querySelector(".CPA").textContent=Number(t.value)*Number(e.value)/a(),document.querySelector(".ThreCpa").textContent=m(),document.querySelector(".Leads").textContent=a(),document.querySelector(".Buyers").textContent=a()*(Number(n.value)/100),i(),d(),document.querySelector(".Arppu").textContent=v(),document.querySelector(".Arpu").textContent=v()/Number(e.value)*i(),document.querySelector(".Budget").textContent=S(),document.querySelector(".OperatingProfit").textContent=y(),document.querySelector(".Margin").textContent=C(),document.querySelector(".Ltv").textContent=v(),document.querySelector(".OperatingMargin").textContent=(100*(y()/v()+1)).toFixed(2),document.querySelector(".Roi").textContent=(i()*v()/S()*100).toFixed(2),document.querySelector(".Rev").textContent=C()-l(),document.querySelector(".RevenueNoCOGS").textContent=f(),document.querySelector(".RevenueCOGS").textContent=Number(r.value)*i()*Number(c.value),document.querySelector(".GrossProfit").textContent=q(),document.querySelector(".PPPU").textContent=q()/i(),document.querySelector(".Profit").textContent=(document.querySelector(".Profit").textContent=f()-S(),f()-S())}))})),t.addEventListener("input",(function(){document.querySelector(".formula_cpc").textContent=t.value})),u.addEventListener("input",(function(){document.querySelector(".formula_crone").textContent=u.value})),n.addEventListener("input",(function(){document.querySelector(".formula_crtwo").textContent=n.value})),r.addEventListener("input",(function(){document.querySelector(".formula_avp").textContent=r.value})),o.addEventListener("input",(function(){document.querySelector(".formula_cogs").textContent=o.value})),c.addEventListener("input",(function(){document.querySelector(".formula_ret").textContent=c.value}));var x=document.querySelector(".calc_inner");document.querySelector(".minus");document.addEventListener("touchstart",(function(e){var t=e.touches[0];N=t.clientX}),!1),document.addEventListener("touchmove",(function(e){if(!N)return!1;var t=e.touches[0].clientX-N;t<0&&(x.style.trasform="translateX(".concat(t,"px)"))}),!1);var N=null;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
